// <auto-generated />
using BookMart2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookMart2.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20191203064440_test1")]
    partial class test1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("BookMart2.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookMart2.Models.AuthorToBook", b =>
                {
                    b.Property<int>("AuthorToBookId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<int>("BookId");

                    b.HasKey("AuthorToBookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorToBooks");
                });

            modelBuilder.Entity("BookMart2.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserID");

                    b.Property<string>("name");

                    b.Property<int>("year");

                    b.HasKey("BookId");

                    b.HasIndex("UserID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookMart2.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookMart2.Models.UserAddress", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("UserAddress");
                });

            modelBuilder.Entity("BookMart2.Models.AuthorToBook", b =>
                {
                    b.HasOne("BookMart2.Models.Author", "Authors")
                        .WithMany("AuthorToBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BookMart2.Models.Book", "Books")
                        .WithMany("AuthorToBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookMart2.Models.Book", b =>
                {
                    b.HasOne("BookMart2.Models.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookMart2.Models.UserAddress", b =>
                {
                    b.HasOne("BookMart2.Models.User", "User")
                        .WithOne("UserAddress")
                        .HasForeignKey("BookMart2.Models.UserAddress", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
